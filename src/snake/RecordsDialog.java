package snake;

import java.awt.Label;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collection;
import java.util.Collections;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JLabel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author alux9127477l
 */
public class RecordsDialog extends javax.swing.JDialog {

    private class Record implements Comparable<Record> {

        public int score;
        public String name;

        public Record(int score, String name) {
            this.score = score;
            this.name = name;
        }

        @Override
        public int compareTo(Record t) {
            if (score > t.score) {
                return 1;
            }
            if (score < t.score) {
                return -1;
            }
            return 0;
        }
    }

    /**
     * Creates new form RecordsDialog
     */
    private static final String FILE_NAME = "scores.txt";
    private int score;
    private ArrayList<Record> recordsList;
    private boolean saveRecord;
    private JLabel[] recordLabels;

    public RecordsDialog(java.awt.Frame parent, boolean modal, int score, String player) {
        super(parent, modal);

        initComponents();
        jLabelPlayer.setText(player);
        initRecordLabels();
        saveRecord = true;
        this.score = score;

        try {
            recordsList = readRecords();

        } catch (IOException ex) {
            ex.printStackTrace();
        }
        checkCurrentRecord();
    }

    private RecordsDialog(JFrame jFrame, boolean b) {
        super(jFrame, b);
    }

    private void initRecordLabels() {
        recordLabels = new JLabel[5];
        recordLabels[0] = jLabelRecord1;
        recordLabels[1] = jLabelRecord2;
        recordLabels[2] = jLabelRecord3;
        recordLabels[3] = jLabelRecord4;
        recordLabels[4] = jLabelRecord5;

    }

    private void checkCurrentRecord() {

        for (Record r : recordsList) {
            if (score < r.score) {
                saveRecord = false;
                break;
            }
        }

        jLabelName.setVisible(saveRecord);
        jTextFieldName.setVisible(saveRecord);
        jLabelCurrentScore.setText("Score: " + score);

    }

    private ArrayList<Record> readRecords() throws IOException {
        ArrayList<Record> list = new ArrayList<>();
        BufferedReader input = null;
        try {
            input = new BufferedReader(new FileReader(FILE_NAME));
            String line;
            int counter = 0;
            while ((line = input.readLine()) != null && counter < 5) {
                String[] recordLine = line.split(":");
                Record r = null;
                if (recordLine.length > 1) {
                    r = new Record(Integer.parseInt(recordLine[0]), recordLine[1]);
                    list.add(r);
                    recordLabels[counter].setText(Integer.parseInt(recordLine[0]) + " " + recordLine[1]);

                } else {
                    r = new Record(Integer.parseInt(recordLine[0]), "NoName");
                    list.add(r);
                    recordLabels[counter].setText(Integer.parseInt(recordLine[0]) + " NoName");
                }

                counter++;

            }
        } finally {
            if (input != null) {
                input.close();
            }
        }
        return list;
    }

    private void saveCurrentRecord(Record r) throws IOException {
        recordsList.add(r);
        Collections.sort(recordsList);
        PrintWriter output = null;
        try {
            output = new PrintWriter(new FileWriter(FILE_NAME));
            int counter = 0;
            for (Record cr : recordsList) {
                if (counter < 5) {
                    output.println(cr.score + ":" + cr.name);
                    counter++;

                }
            }
        } finally {
            if (output != null) {
                output.close();
            }
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelCurrentScore = new javax.swing.JLabel();
        jLabelRecord1 = new javax.swing.JLabel();
        jLabelRecord2 = new javax.swing.JLabel();
        jLabelRecord3 = new javax.swing.JLabel();
        jLabelRecord4 = new javax.swing.JLabel();
        jLabelRecord5 = new javax.swing.JLabel();
        jLabelName = new javax.swing.JLabel();
        jTextFieldName = new javax.swing.JTextField();
        jButtonOK = new javax.swing.JButton();
        jLabelPlayer = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabelCurrentScore.setText("Current Score");

        jLabelRecord1.setText("0 NoName");

        jLabelRecord2.setText("0 NoName");

        jLabelRecord3.setText("0 NoName");

        jLabelRecord4.setText("0 NoName");
        jLabelRecord4.setToolTipText("");

        jLabelRecord5.setText("0 NoName");

        jLabelName.setText("Name:");

        jTextFieldName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldNameActionPerformed(evt);
            }
        });

        jButtonOK.setText("OK");
        jButtonOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOKActionPerformed(evt);
            }
        });

        jLabelPlayer.setText("player");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelCurrentScore)
                            .addComponent(jLabelRecord1)
                            .addComponent(jLabelRecord2)
                            .addComponent(jLabelRecord3)
                            .addComponent(jLabelRecord4)
                            .addComponent(jLabelRecord5))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabelName)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextFieldName, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 189, Short.MAX_VALUE)
                        .addComponent(jButtonOK)
                        .addGap(27, 27, 27))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabelPlayer)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabelPlayer)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabelCurrentScore)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelRecord1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelRecord2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelRecord3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelRecord4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelRecord5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 90, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelName)
                    .addComponent(jTextFieldName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonOK))
                .addGap(19, 19, 19))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldNameActionPerformed

    private void jButtonOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOKActionPerformed
        if (saveRecord) {
            Record r = new Record(score, jTextFieldName.getText());
            try {
                saveCurrentRecord(r);
            } catch (IOException ex) {
                Logger.getLogger(RecordsDialog.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        dispose();
    }//GEN-LAST:event_jButtonOKActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RecordsDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RecordsDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RecordsDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RecordsDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                RecordsDialog dialog = new RecordsDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonOK;
    private javax.swing.JLabel jLabelCurrentScore;
    private javax.swing.JLabel jLabelName;
    private javax.swing.JLabel jLabelPlayer;
    private javax.swing.JLabel jLabelRecord1;
    private javax.swing.JLabel jLabelRecord2;
    private javax.swing.JLabel jLabelRecord3;
    private javax.swing.JLabel jLabelRecord4;
    private javax.swing.JLabel jLabelRecord5;
    private javax.swing.JTextField jTextFieldName;
    // End of variables declaration//GEN-END:variables
}
